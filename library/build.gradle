plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven-publish'
}

apply from: '../dependencies.gradle'

android {
    compileSdkVersion build.compileSdk
    buildToolsVersion build.buildTools

    defaultConfig {
        minSdkVersion build.minSdk
        targetSdkVersion build.targetSdk

        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
    implementation "androidx.appcompat:appcompat:$versions.appcompat"
    implementation "androidx.core:core-ktx:$versions.core_ktx"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintlayout"

    // ExoPlayer media3
    implementation "androidx.media3:media3-exoplayer:1.4.1"
    implementation "androidx.media3:media3-ui:1.4.1"
}

// https://ayoubbenkhemis.medium.com/publish-android-library-with-jitpack-be00a29a8174
afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // You can then customize attributes of the publication as shown below.
                groupId = 'com.github.vkay94.timebar'
                artifactId = 'library'
                version = build.libMajor + (build.libMinor * 100) + (build.libPatch * 10000)
            }
        }
    }
}